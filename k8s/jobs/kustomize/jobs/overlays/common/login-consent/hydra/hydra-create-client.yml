#
# Copyright SecureKey Technologies Inc. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

---
kind: Job
apiVersion: batch/v1
metadata:
  name: hydra-create-client
spec:
  template:
    spec:
      restartPolicy: Never
      initContainers:
        - name: healthcheck-ready
          image: busybox
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh"]
          args:
            - "-c"
            - |
              while [[ "$(wget -T 5 -S --spider http://hydra-admin/health/ready 2>&1 | grep '200 OK')" == "" ]];
              do echo "waiting for endpoint";
              sleep 5;
              done;
      containers:
      - name: hydra-clients-create
        image: "oryd/hydra:v1.3.2-alpine"
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh"]
        args:
          - "-c"
          - |
            echo "Creating clients ...";

            err_resp=$(hydra clients create --endpoint http://hydra-admin --fake-tls-termination --id auth-code-client --name "Share Your Credentials" --secret secret --grant-types authorization_code,refresh_token --response-types code,id_token --scope StudentCard,TravelCard,PermanentResidentCard,VaccinationCertificate,CertifiedMillTestReport,CrudeProductCredential,UniversityDegreeCredential,CreditCardStatement,mDL,CreditScore --skip-tls-verify --callbacks https://demo-issuer.||DOMAIN||/callback 2>&1 > /dev/null);
            echo $err_resp;
            if [ -z "$err_resp" ] || [ -n "$(echo ${err_resp} | grep already )" ];then echo "Success client creation"; break;else exit 1;fi;

            err_resp=$(hydra clients create --endpoint http://hydra-admin --fake-tls-termination --id bank_issuer --name "bank_issuer" --secret bank-issuer-secret --grant-types authorization_code --response-types code --scope openid,profile,address,BankAccountProof --skip-tls-verify --callbacks https://api-gateway.||DOMAIN||/oidc/redirect 2>&1 > /dev/null);
            echo $err_resp;
            if [ -z "$err_resp" ] || [ -n "$(echo ${err_resp} | grep already )" ];then echo "Success client creation"; break;else exit 1;fi;

            err_resp=$(hydra clients create --endpoint http://hydra-admin --fake-tls-termination --id hub-auth --secret hub-auth-secret --grant-types authorization_code,refresh_token --response-types code,id_token --scope openid,profile,email --skip-tls-verify --callbacks https://hub-auth.||DOMAIN||/oidc/callback 2>&1 > /dev/null);
            echo $err_resp;
            if [ -z "$err_resp" ] || [ -n "$(echo ${err_resp} | grep already )" ];then echo "Success client creation"; exit 0;else exit 1;fi;
            echo "... Finished creating clients"
